# Generated by Django 5.1.5 on 2025-02-16 21:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import iranian_cities.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('iranian_cities', '0009_rename_iranian_cit_code_1c3b38_idx_sage_city_code_8db749_idx_and_more'),
        ('jobAndCompanyActivity_module', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'ادمین'), ('employer', 'کارفرما'), ('jobseeker', 'کارجو')], max_length=120, verbose_name='نوع کاربر')),
                ('first_name', models.CharField(max_length=150, verbose_name='نام')),
                ('last_name', models.CharField(max_length=150, verbose_name='نام خانوادگی')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='ایمیل')),
                ('phone', models.CharField(max_length=120, verbose_name='شماره تلفن')),
                ('password', models.CharField(max_length=220, verbose_name='رمز عبور')),
                ('verify_code', models.CharField(blank=True, max_length=220, null=True, verbose_name='کدفعالسازی')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persian_compnay_name', models.CharField(max_length=220, verbose_name='نام شرکت به فارسی')),
                ('company_name', models.CharField(max_length=220, verbose_name='نام شرکت به انگلیسی')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='images/company_logo', verbose_name='لوگو شرکت')),
                ('site_address', models.URLField(blank=True, null=True, verbose_name='آدرس سایت شرکت')),
                ('prson_count', models.CharField(choices=[('1', 'یک نفر'), ('2-10', '2 تا 10 نفر'), ('11-50', '11 تا 50 نفر'), ('51-200', '51 تا 200 نفر'), ('201-500', '201 تا 500 نفر'), ('501-1000', '501 تا 1000 نفر'), ('1000+', 'بیش از 1000 نفر')], max_length=120, verbose_name='تعداد پرسنل')),
                ('company_filed', models.ForeignKey(max_length=220, on_delete=django.db.models.deletion.CASCADE, to='jobAndCompanyActivity_module.companyactivity', verbose_name='حوزه فعالیت شرکت')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نوع کاربر')),
            ],
            options={
                'verbose_name': 'کارفرما',
                'verbose_name_plural': 'کارفرمایان',
            },
        ),
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('county', iranian_cities.fields.CountyField(on_delete=django.db.models.deletion.CASCADE, to='iranian_cities.county', verbose_name='نام شهرستان')),
                ('job_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobAndCompanyActivity_module.job', verbose_name='دسته بندی شغل')),
                ('province', iranian_cities.fields.ProvinceField(on_delete=django.db.models.deletion.CASCADE, to='iranian_cities.province', verbose_name='نام استان')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='نوع کاربر')),
            ],
            options={
                'verbose_name': 'کارجو',
                'verbose_name_plural': 'کارجویان',
            },
        ),
    ]
